// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrenHakaton.Models;

namespace OrenHakaton.Migrations
{
    [DbContext(typeof(OrenHakatonContext))]
    [Migration("20200612154414_UsersCred")]
    partial class UsersCred
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("OrenHakaton.Models.Apartments", b =>
                {
                    b.Property<int>("ApartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HousesHouseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Layout")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UsersUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ApartmentId");

                    b.HasIndex("HousesHouseId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("OrenHakaton.Models.EmployeesMC", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeId");

                    b.ToTable("EmployeesMC");
                });

            modelBuilder.Entity("OrenHakaton.Models.Houses", b =>
                {
                    b.Property<int>("HouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApartmentsCount")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ManagementCompaniesManagementCompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.HasKey("HouseId");

                    b.HasIndex("ManagementCompaniesManagementCompanyId");

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("OrenHakaton.Models.ManagementCompanies", b =>
                {
                    b.Property<int>("ManagementCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EmployeesMCEmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Google")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MeetingsPollId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PollsPollId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RequestsRequestId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("Yandex")
                        .HasColumnType("TEXT");

                    b.HasKey("ManagementCompanyId");

                    b.HasIndex("EmployeesMCEmployeeId");

                    b.HasIndex("MeetingsPollId");

                    b.HasIndex("PollsPollId");

                    b.HasIndex("RequestsRequestId");

                    b.ToTable("ManagementCompanies");
                });

            modelBuilder.Entity("OrenHakaton.Models.Meetings", b =>
                {
                    b.Property<int>("PollId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Link")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Result")
                        .HasColumnType("TEXT");

                    b.HasKey("PollId");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("OrenHakaton.Models.Polls", b =>
                {
                    b.Property<int>("PollId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Result")
                        .HasColumnType("TEXT");

                    b.HasKey("PollId");

                    b.ToTable("Polls");
                });

            modelBuilder.Entity("OrenHakaton.Models.Requests", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.HasKey("RequestId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("OrenHakaton.Models.Specialties", b =>
                {
                    b.Property<int>("SpecialityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EmployeesMCEmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("SpecialityId");

                    b.HasIndex("EmployeesMCEmployeeId");

                    b.ToTable("Specialties");
                });

            modelBuilder.Entity("OrenHakaton.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mail")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OrenHakaton.Models.Apartments", b =>
                {
                    b.HasOne("OrenHakaton.Models.Houses", null)
                        .WithMany("Apartments")
                        .HasForeignKey("HousesHouseId");

                    b.HasOne("OrenHakaton.Models.Users", null)
                        .WithMany("Apartments")
                        .HasForeignKey("UsersUserId");
                });

            modelBuilder.Entity("OrenHakaton.Models.Houses", b =>
                {
                    b.HasOne("OrenHakaton.Models.ManagementCompanies", null)
                        .WithMany("Houses")
                        .HasForeignKey("ManagementCompaniesManagementCompanyId");
                });

            modelBuilder.Entity("OrenHakaton.Models.ManagementCompanies", b =>
                {
                    b.HasOne("OrenHakaton.Models.EmployeesMC", null)
                        .WithMany("ManagementCompanies")
                        .HasForeignKey("EmployeesMCEmployeeId");

                    b.HasOne("OrenHakaton.Models.Meetings", null)
                        .WithMany("ManagementCompanies")
                        .HasForeignKey("MeetingsPollId");

                    b.HasOne("OrenHakaton.Models.Polls", null)
                        .WithMany("ManagementCompanies")
                        .HasForeignKey("PollsPollId");

                    b.HasOne("OrenHakaton.Models.Requests", null)
                        .WithMany("ManagementCompanies")
                        .HasForeignKey("RequestsRequestId");
                });

            modelBuilder.Entity("OrenHakaton.Models.Specialties", b =>
                {
                    b.HasOne("OrenHakaton.Models.EmployeesMC", null)
                        .WithMany("Specialties")
                        .HasForeignKey("EmployeesMCEmployeeId");
                });
#pragma warning restore 612, 618
        }
    }
}
